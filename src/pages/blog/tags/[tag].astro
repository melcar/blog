---
import { getCollection } from "astro:content";
import BlogPostList from "../../../layouts/BlogPostList.astro";
export async function getStaticPaths(): Promise<any> {
  const allPosts = await getCollection("blog");

  const uniqueTags: string[] = [
    ...new Set(allPosts.map((post) => post.data?.tags).flat()),
  ].filter((a) => a !== undefined);

  uniqueTags.sort();
  const allTagsCombination: string[][] = [];
  // generate all tags combinations but all combination is unique as we always use tags in alphabetical order.
  // if you have tags A and B you would only have the page ../tags/A&B and not ../tags/B&A
  for (let tagIndex = 0; tagIndex < uniqueTags.length; tagIndex++) {
    for (
      let tagsToSkip = 0;
      tagsToSkip < uniqueTags.length - tagIndex;
      tagsToSkip++
    )
      allTagsCombination.push(
        [uniqueTags[tagIndex]].concat(
          uniqueTags.slice(tagIndex + tagsToSkip + 1),
        ),
      ); // +1 as we skip the current tag
  }

  return allTagsCombination.map((tags) => {
    const filteredPosts = allPosts.filter((post) =>
      tags.every((tag) => post.data.tags?.includes(tag)),
    );
    return {
      params: { tag: tags.join("&") },
      props: { posts: filteredPosts },
    };
  });
}

const { tag }: any = Astro.params;
const { posts }: any = Astro.props;
---

<BlogPostList {posts} pageTitle={"Posts tagged with: " + tag.split("&").join(", ")} />
