---
import BaseLayout from '../index.astro';
import BlogPost from '../../../layouts/BlogPost.astro';

export async function getStaticPaths() : Promise<any>{
  const allPosts = await Astro.glob('../../../content/blog/*.md');

  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
  console.log(uniqueTags);
  uniqueTags.sort() 
  const allTagsCombination = [];
// generate all tags combinations but all combination is unique as we always use tags in alphabetical order. 
// if you have tags A and B you would only have the page ../tags/A&B and not ../tags/B&A
  for (let tagIndex = 0; tagIndex < uniqueTags.length; tagIndex++) {
    for (let tagsToSkip=0; tagsToSkip< uniqueTags.length - tagIndex; tagsToSkip++)
    allTagsCombination.push(([uniqueTags[tagIndex]].concat( uniqueTags.slice(tagIndex+tagsToSkip+1))).join("&"));// +1 as we skip the current tag
  }
  console.log(allTagsCombination);
  return allTagsCombination.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag }: any = Astro.params;
const { posts }:any = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>